import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    id 'java'
    id 'edu.wpi.first.wpilib.repositories.WPILibRepositoriesPlugin'
    id "org.jetbrains.kotlin.jvm"
    id 'maven-publish'
    id "io.deepmedia.tools.deployer"
}

dependencies {
    api project(':units')

    implementation "edu.wpi.first.cscore:cscore-java:$wpilibVersion"
    implementation "edu.wpi.first.cameraserver:cameraserver-java:$wpilibVersion"
    implementation "edu.wpi.first.ntcore:ntcore-java:$wpilibVersion"
    implementation "edu.wpi.first.wpilibj:wpilibj-java:$wpilibVersion"
    implementation "edu.wpi.first.wpiutil:wpiutil-java:$wpilibVersion"
    implementation "edu.wpi.first.wpimath:wpimath-java:$wpilibVersion"
    implementation "edu.wpi.first.wpilibNewCommands:wpilibNewCommands-java:$wpilibVersion"
    implementation "edu.wpi.first.hal:hal-java:$wpilibVersion"
    implementation "org.ejml:ejml-simple:0.43.1"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.15.2"
    implementation "com.fasterxml.jackson.core:jackson-core:2.15.2"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.15.2"
    implementation 'edu.wpi.first.thirdparty.frc2025.opencv:opencv-java:4.10.0-2'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

var javaVersion = "17"
def kotlinJvmTarget = JvmTarget.fromTarget(javaVersion.toString())

kotlin {
    compilerOptions {
        jvmTarget.set(kotlinJvmTarget)
        jvmToolchain(Integer.valueOf(javaVersion.toString()))
    }
}

java {
    sourceCompatibility = JavaVersion.toVersion(javaVersion)
    targetCompatibility = JavaVersion.toVersion(javaVersion)

    withSourcesJar()
    withJavadocJar()
}


// Setup Javadocs to link back to WPILib docs
javadoc {
    options {
        links "https://docs.oracle.com/en/java/javase/$javaVersion/docs/api/", 'https://github.wpilib.org/allwpilib/docs/release/java/'
    }
}

test {
    useJUnitPlatform()
    systemProperty 'junit.jupiter.extensions.autodetection.enabled', 'true'
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

apply from: '../publish.gradle'
